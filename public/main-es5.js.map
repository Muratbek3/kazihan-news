{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/reg/reg.component.ts","webpack:///src/app/reg/reg.component.html","webpack:///src/app/sorting.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","authService","router","next","state","isAuthenticated","navigate","providedIn","AuthService","http","user","headers","append","post","pipe","res","json","token","localStorage","setItem","JSON","stringify","clear","getItem","get","AuthComponent","_flashMessagesService","login","password","show","cssClass","timeout","authUser","subscribe","data","success","msg","storeUser","signIn","DashboardComponent","category","photo","text","author","parse","date","Date","console","log","createPost","HeaderComponent","logout","HomeComponent","posts","getAllPosts","err","i","length","substring","setCategory","PostComponent","route","post$","params","getPostById","deletePost","RegComponent","name","email","registerUser","signUp","SortingPipe","filter","toLowerCase","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegComponent } from './reg/reg.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthGuard } from './auth.guard'\nimport { PostComponent } from './post/post.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'reg', component: RegComponent},\n  {path: 'auth', component: AuthComponent},\n  {path: 'post/:id', component: PostComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RegComponent } from './reg/reg.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AuthService } from './auth.service';\nimport { HttpModule } from '@angular/http';\nimport { QuillModule } from 'ngx-quill';\nimport { PostComponent } from './post/post.component';\nimport { SortingPipe } from './sorting.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    RegComponent,\n    AuthComponent,\n    DashboardComponent,\n    PostComponent,\n    SortingPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpModule,\n    QuillModule.forRoot()\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if(this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth'])\n      return false;\n    }\n    \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  token: any\n  user: any\n\n  constructor(\n    private http : Http\n  ) { }\n\n  registerUser(user) {\n    let headers = new Headers()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/account/reg', user, \n    { headers: headers}).pipe(map(res => res.json()))\n  }\n\n  authUser(user) {\n    let headers = new Headers()\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/account/auth', user, \n    { headers: headers}).pipe(map(res => res.json()))\n  }\n\n  storeUser(token, user) {\n    localStorage.setItem('token', token)\n    localStorage.setItem('user', JSON.stringify(user))\n\n    this.token = token\n    this.user = user\n  }\n\n  logout() {\n    this.token = null\n    this.user = null\n    localStorage.clear()\n  }\n\n  isAuthenticated() {\n    return tokenNotExpired()\n  }\n\n  createPost(post) {\n    let headers = new Headers()\n    headers.append('Authorization', localStorage.getItem('token'))\n    headers.append('Content-Type', 'application/json')\n    return this.http.post('http://localhost:3000/account/dashboard', post, \n    { headers: headers}).pipe(map(res => res.json()))\n  }\n\n  getAllPosts() {\n    return this.http.get('http://localhost:3000' ).pipe(map(res => res.json()))\n  }\n\n  getPostById(id) {\n    return this.http.get(`http://localhost:3000/post/${id}`  ).pipe(map(res => res.json()))\n  }\n\n  deletePost(id) {\n    return this.http.delete(`http://localhost:3000/post/${id}` ).pipe(map(res => res.json()))\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  login: string\n  password: string\n\n  constructor(\n    private _flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  signIn() {\n    const user = {\n      login: this.login,\n      password: this.password,\n    }\n    if(!user.login) {\n      this._flashMessagesService.show('Enter your login', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    else if(!user.password) {\n      this._flashMessagesService.show('Enter your password', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    \n    this.authService.authUser(user).subscribe( data => {\n      if (!data.success) {\n        this._flashMessagesService.show(data.msg, \n        { cssClass: 'alert-danger', timeout: 3000 });\n      } else {\n        this._flashMessagesService.show(\"You have successfully logged in!\", \n          { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/dashboard'])\n          this.authService.storeUser(data.token, data.user)\n      }\n    })\n    \n    \n  }\n\n}\n\n","<body class=\"text-center container\">\n    <form (submit)=\"signIn()\" class=\"form-signin\">\n      <h5 class=\"my-5 mr-md-auto font-weight-big\" style=\"font-size: 50px;\">KazihanNews</h5>\n      <h1 class=\"h3 mb-3 font-weight-normal\">Вход</h1>\n      <input [(ngModel)]=\"login\" type=\"login\" name=\"login\" id=\"inputLogin\" class=\"form-control\" placeholder=\"Логин\">\n      <input [(ngModel)]=\"password\" type=\"password\" name=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Пароль\">\n      <div class=\"checkbox mb-3\">\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Войти</button>\n      <p class=\"mt-5 mb-3 text-muted\">© 2020-2021</p>\n    </form>\n  \n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  category: string\n  title: string\n  photo: string\n  text: string\n\n  constructor(\n    private _flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  createPost() {\n    const post = {\n      category: this.category,\n      title: this.title,\n      photo: this.photo,\n      text: this.text,\n      author: JSON.parse(localStorage.getItem(\"user\")).login,\n      date: new Date()\n    }\n    if(!post.category) {\n      this._flashMessagesService.show('Select a category', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    else if(!post.title) {\n      this._flashMessagesService.show('Enter title', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    else if(!post.photo) {\n      this._flashMessagesService.show('Insert a photo', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    else if(!post.text) {\n      this._flashMessagesService.show('Enter text', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n\n    console.log(post)\n    \n    this.authService.createPost(post).subscribe( data => {\n      if (!data.success) {\n        this._flashMessagesService.show(data.msg, \n        { cssClass: 'alert-danger', timeout: 3000 });\n      } else {\n        this._flashMessagesService.show(data.msg, \n          { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/'])\n      }\n    })\n    \n    \n  }\n\n}\n","<body class=\"container\">\n    <form (submit)=\"createPost()\" class=\"form-signin\">\n      <h1 class=\"h3 mb-3 text-center font-weight-normal\">Создать пост:</h1>\n      <label>Категория, Название, Фото:</label>\n      <select [(ngModel)]=\"category\" class=\"form-control mb-3\" name=\"category\" id=\"category\">\n          <option value=\"World\">Новости</option>\n          <option value=\"Technology\">Технологии</option>\n          <option value=\"Design\">Дизайн</option>\n          <option value=\"Culture\">Культура</option>\n          <option value=\"Business\">Бизнес</option>\n          <option value=\"Opinion\">Мнения</option>\n          <option value=\"Science\">Наука</option>\n          <option value=\"Health\">Здоровье</option>\n          <option value=\"Style\">Стиль</option>\n          <option value=\"Travel\">Путешествие</option>\n      </select>\n      <input [(ngModel)]=\"title\" type=\"title\" name=\"title\" id=\"inputTitle\" class=\"form-control mb-3\" placeholder=\"Title\">\n      <quill-editor [(ngModel)]=\"photo\" name=\"photo\" placeholder=\"Фото\"></quill-editor>\n      <label class=\"mt-3\">Информация:</label>\n      <quill-editor [(ngModel)]=\"text\" name=\"text\" placeholder=\"Текст\"></quill-editor>\n      <div class=\"checkbox mb-3\">\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block mb-5\" type=\"submit\">Создать</button>\n    </form>\n  \n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    private _flashMessagesService: FlashMessagesService,\n    public authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  logoutUser() {\n    this.authService.logout()\n    this._flashMessagesService.show(\"You are logged out\", \n      { cssClass: 'alert-success', timeout: 3000 });\n      this.router.navigate(['/auth'])\n  }\n\n}\n","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\n    <h5 class=\"my-0 mr-md-auto font-weight-normal\"><a [routerLink]=\"['/']\">KazihanNews</a> </h5>\n    <nav class=\"my-2 my-md-0 mr-md-3\">\n      <a class=\"p-2\" [routerLink]=\"['/']\">Главная</a>\n      <a *ngIf=\"authService.isAuthenticated()\" class=\"p-2\" [routerLink]=\"['/dashboard']\">Добавить</a>\n    </nav>\n    <a *ngIf=\"!authService.isAuthenticated()\" class=\"btn btn-outline-primary mr-3\" [routerLink]=\"['/auth']\">Войти</a>\n    <a *ngIf=\"!authService.isAuthenticated()\" class=\"btn btn-outline-primary\" [routerLink]=\"['/reg']\">Зарегистрироваться</a>\n    <a *ngIf=\"authService.isAuthenticated()\" class=\"btn btn-outline-warning\" (click)=\"logoutUser()\">Выйти</a>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  posts = []\n  category\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.getAllPosts().subscribe( posts => \n      this.posts = posts,\n      (err) => {},\n      () => {\n        for (let i = 0; i < this.posts.length; i++) {\n          this.posts[i].text = this.posts[i].text.substring(0, 250)\n          \n        }\n      }\n    )\n  }\n  setCategory(category){\n    this.category=category\n  }\n\n}\n","<div class=\"nav-scroller py-1 mb-2\">\n    <nav class=\"nav d-flex justify-content-between\">\n      <a class=\"p-2\" (click)=\"setCategory('World')\"  href=\"#\">Мир</a>\n      <a class=\"p-2\" (click)=\"setCategory('Technology')\" href=\"#\">Технологии</a>\n      <a class=\"p-2\" (click)=\"setCategory('Design')\" href=\"#\">Дизайн</a>\n      <a class=\"p-2\" (click)=\"setCategory('Culture')\" href=\"#\">Культура</a>\n      <a class=\"p-2\" (click)=\"setCategory('Business')\" href=\"#\">Бизнес</a>\n      <a class=\"p-2\" (click)=\"setCategory('Opinion')\" href=\"#\">Мнение</a>\n      <a class=\"p-2\" (click)=\"setCategory('Science')\" href=\"#\">Наука</a>\n      <a class=\"p-2\" (click)=\"setCategory('Health')\" href=\"#\">Здоровье</a>\n      <a class=\"p-2\" (click)=\"setCategory('Style')\" href=\"#\">Стиль</a>\n      <a class=\"p-2\" (click)=\"setCategory('Travel')\" href=\"#\">Путешествие</a>\n    </nav>\n  </div>\n\n  <div class=\"row d-flex\">\n    <div class=\"figure\">\n        <img class=\"photo\" src=\"https://i.pinimg.com/originals/f2/4e/b7/f24eb7fce51a055204148290ca56aaa2.jpg\" alt=\"\">\n        <div class=\"col-md-6 px-0 p-5\">\n          <h1 class=\"display-4 font-italic\" style=\"color: #34ac54 ; text-shadow: 2px 2px 2px #000;\">Добро пожаловать!</h1>\n          <p class=\"lead my-3\" style=\"color: #ffffff ; text-shadow: 1px 1px 1px #000;\">Здесь публикуются новости из мира технологий, бизнеса, путешествий, культуры, моды, здоровья. Присоединяйтесь к нам, зарегистрируйтесь прямо сейчас и напишите свой первый пост</p>\n          <p class=\"lead mb-0\" ><a [routerLink]=\"['/reg']\" class=\"font-weight-bold\" style=\"color: #ec4434 ; text-shadow: 2px 2px 2px #000;\">Зарегистрироваться</a></p>\n        </div>\n      </div>\n\n      <div *ngFor=\"let post of posts | sorting: category\" class=\"col-md-4\">\n        <div class=\"p-0 mb-4 box-shadow\">\n          <quill-view [content]=\"post.photo\"></quill-view>\n          <div class=\"card-body mb-3\">\n            <div class=\"m-0 d-flex justify-content-between align-items-center\">\n                <strong class=\"mb-2 text-primary\">{{ post.category }}</strong>\n                <small class=\"text-muted\">{{ post.date | date: \"short\" }}</small>\n            </div>\n            <h4 class=\"m-0\">\n                <a class=\"text-dark\" [routerLink]=\"['post', post._id]\">{{ post.title }}</a>\n            </h4>\n            <quill-view [content]=\"post.text\"></quill-view>\n          </div>\n        </div>\n      </div>\n     \n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\n  post$\n  login\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private _flashMessagesService: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    if (this.authService.isAuthenticated()) {\n      this.login = JSON.parse(localStorage.getItem(\"user\")).login\n    }\n    this.post$ = this.route.params\n    .pipe(switchMap( (params : Params) => {\n      return this.authService.getPostById(params['id'])\n    }))\n  }\n\n  deletePost(id) {\n    this.authService.deletePost(id).subscribe( data => {\n      if (!data.success) {\n        this._flashMessagesService.show(\"Post not deleted!\", \n        { cssClass: 'alert-danger', timeout: 3000 });\n      } else {\n        this._flashMessagesService.show(\"Post deleted!\", \n          { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/'])\n      }\n    })\n  }\n\n}\n","<div *ngIf=\"post$ | async as post\" class=\"container\">\n    <div class=\"m-0 d-flex justify-content-between align-items-center\">\n        <h1>\n            {{ post.title }}\n        </h1>\n        <button class=\"btn btn-sm btn-success\"  [routerLink]=\"['/']\">Назад</button>\n        \n    </div>\n    <div class=\"m-0 d-flex justify-content-between align-items-center\">\n        <strong class=\"mb-2 text-primary\">{{ post.category }}</strong>\n        <small class=\"text-muted\">Автор: @{{ post.author}}, Дата: {{ post.date | date: \"short\" }}</small>\n    </div>\n    <quill-view [content]=\"post.photo\"></quill-view>\n    <div class=\"mt-2 mb-3\">\n        <quill-view [content]=\"post.text\"></quill-view>\n    </div>\n    <button *ngIf=\"login == post.author\" class=\"btn btn-sm btn-danger\" (click)=\"deletePost(post._id)\">Удалить</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-reg',\n  templateUrl: './reg.component.html',\n  styleUrls: ['./reg.component.scss']\n})\nexport class RegComponent implements OnInit {\n\n  name: string\n  login: string\n  email: string\n  password: string\n\n  constructor(\n    private _flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  signUp() {\n    const user = {\n      name: this.name,\n      login: this.login,\n      email: this.email,\n      password: this.password,\n    }\n    if(!user.name) {\n      this._flashMessagesService.show('Enter your name', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    else if(!user.login) {\n      this._flashMessagesService.show('Enter your login', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    else if(!user.email) {\n      this._flashMessagesService.show('Enter your email', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    else if(!user.password) {\n      this._flashMessagesService.show('Enter your password', \n      { cssClass: 'alert-danger', timeout: 3000 });\n      return false\n    }\n    \n    this.authService.registerUser(user).subscribe( data => {\n      if (!data.success) {\n        this._flashMessagesService.show(data.msg, \n        { cssClass: 'alert-danger', timeout: 3000 });\n        this.router.navigate(['/reg'])\n      } else {\n        this._flashMessagesService.show(data.msg, \n          { cssClass: 'alert-success', timeout: 3000 });\n          this.router.navigate(['/auth'])\n      }\n    })\n    \n    \n  }\n\n}\n","<body class=\"text-center container\">\n    <form (submit)=\"signUp()\" class=\"form-signin\">\n      <h5 class=\"my-5 mr-md-auto font-weight-big\" style=\"font-size: 50px;\">KazihanNews</h5>\n      <h1 class=\"h3 mb-3 font-weight-normal\">Регистрация</h1>\n      <input [(ngModel)]=\"name\" type=\"name\" name=\"name\" id=\"inputName\" class=\"form-control\" placeholder=\"Имя\">\n      <input [(ngModel)]=\"login\" type=\"login\" name=\"login\" id=\"inputLogin\" class=\"form-control\" placeholder=\"Логин\">\n      <input [(ngModel)]=\"email\" type=\"email\" name=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Почта\">\n      <input [(ngModel)]=\"password\" type=\"password\" name=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Пароль\">\n      <div class=\"checkbox mb-3\">\n      </div>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Зарегистрироваться</button>\n      <p class=\"mt-5 mb-3 text-muted\">© 2020-2021</p>\n    </form>\n  \n\n</body>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sorting'\n})\nexport class SortingPipe implements PipeTransform {\n\n  transform(posts, category= ''): unknown {\n    if(!category){\n      return posts\n    }\n    return posts.filter(posts=>{\n      return posts.category.toLowerCase()== category.toLowerCase()\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}